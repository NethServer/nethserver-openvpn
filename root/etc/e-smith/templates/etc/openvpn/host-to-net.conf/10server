{
    $mode = $openvpn{'Mode'} || 'routed';
    $routeToVPN = $openvpn{'RouteToVPN'} || 'disabled';
    $topology = $openvpn{'Topology'} || 'subnet';
    if ($mode eq 'routed') {
        $OUT.="dev tunrw\n";
        if(defined $openvpn{Network} and defined $openvpn{Netmask})
        {
    	    $OUT .= "server ".$openvpn{Network}." ".$openvpn{Netmask}."\n";
        }
        if ($routeToVPN eq 'enabled') {
            $OUT.="push \"redirect-gateway def1\"\n";
        }
    } elsif ($mode eq 'bridged') {
        $tap =  $openvpn{'TapInterface'} || 'tap0';
        use esmith::NetworksDB;
        my $ndb = esmith::NetworksDB->open_ro();
        my $br = $openvpn{'BridgeName'} || 'br0';
        my $device = $ndb->get($br) || die("No $br device found");
        my $netmask = $device->prop('netmask');
        my $ip = $device->prop('ipaddr') || die("No ip address for $br");
        my $start = $openvpn{'BridgeStartIP'};
        my $end = $openvpn{'BridgeEndIP'};

        $OUT.="dev $tap\n";
        $OUT.="server-bridge $ip $netmask $start $end\n";
    }
    $OUT.="ifconfig-pool-persist host-to-net.pool 0\n";

    if ($openvpn{UDPPort} ne '') {
        $OUT .= "# UDP server\n";
        $OUT .="port ".$openvpn{UDPPort}."\n";
        $OUT .= "proto udp\n";
    } elsif ($openvpn{TCPPort} ne '') {
        $OUT .= "# TCP server\n";
        $OUT .="port ".$openvpn{TCPPort}."\n";
        $OUT .= "proto tcp-server\n";
    }

    $OUT .= "topology $topology\n";
}
client-connect /usr/libexec/nethserver/openvpn-connect
client-disconnect /usr/libexec/nethserver/openvpn-disconnect
script-security 3
float
multihome
