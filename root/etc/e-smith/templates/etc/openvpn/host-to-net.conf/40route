{
    use esmith::NetworksDB;
    use esmith::ConfigDB;
    use esmith::util;
    use NethServer::Service;
    use NetAddr::IP;
    my $ndb = esmith::NetworksDB->open_ro();
    my $rdb = esmith::ConfigDB->open_ro('routes');
    my $mode = $openvpn{'Mode'} || 'routed';

    my @dns;
    my $s = new NethServer::Service('dnsmasq');
    if( $s->is_owned() && $s->is_enabled() ) {
        if ($mode eq 'bridged') { # use green address
            foreach ($ndb->get_all_by_prop('role' => 'green')) {
                push(@dns, $_->prop('ipaddr'));
            }
        } else { # use tun address
            my ($tot, $first, $last) = esmith::util::computeHostRange($openvpn{Network},  $openvpn{Netmask});
            $first = esmith::util::IPquadToAddr($first); # convert to integer
            $first = esmith::util::IPaddrToQuad($first+1);
            push(@dns, $first);
        }
    } else {
        @dns = split(',', ($dns{NameServers} || ''), 2);
    }

    $OUT  = "";

    if($openvpn{'ClientToClient'} eq 'enabled')
    {
        $OUT .= "client-to-client\n";
    }

    my $pushDomain = $openvpn{'PushDomain'} || $DomainName;
    $OUT .= "push \"dhcp-option DOMAIN $pushDomain\"\n";

    my @pushDns = $openvpn{'PushDns'} ? split(',', $openvpn{'PushDns'}) : @dns;
    foreach my $host (@pushDns) {
        $OUT .= "push \"dhcp-option DNS $host\"\n";
    }

    my @pushWins = $openvpn{'PushWins'} ? split(',', $openvpn{'PushWins'}) : @dns;
    foreach my $host (@pushWins) {
        $OUT .= "push \"dhcp-option WINS $host\"\n";
    }

    my @pushNbdd = $openvpn{'PushNbdd'} ? split(',', $openvpn{'PushNbdd'}) : @dns;
    foreach my $host (@pushNbdd) {
        $OUT .= "push \"dhcp-option NBDD $host\"\n";
    }

    $OUT .= "push \"dhcp-option NBT 2\"\n";

    my $extra_routes = $openvpn{'PushExtraRoutes'} || 'enabled';
    if ($extra_routes eq 'enabled') {
        my @routes = $rdb->get_all_by_prop( type => 'static');
        foreach my $network_entry (@routes)
        {
            my $network = $network_entry->key();
            my $block = NetAddr::IP->new( $network ) || "";

            if(not $network eq $openvpn{Network})
            {
                $OUT .= "push \"route ".$block->addr()." ".$block->mask()."\"\n";
            }
        }
    }

    my $custom_routes = $openvpn{'CustomRoutes'} || '';
    if ($custom_routes) {
        foreach (split(",",$custom_routes)) {
            my $block = NetAddr::IP->new( $_ ) || "";
            if ($block) {
                $OUT .= "push \"route ".$block->addr()." ".$block->mask()."\"\n";
            }
        }
    }
    
    if ($mode ne 'bridged') {
        foreach ($ndb->get_all_by_prop('role' => 'green')) {
            my $greenNetwork = esmith::util::computeLocalNetworkSpec($_->prop('ipaddr'),$_->prop('netmask'));
            $greenNetwork =~ s/\// /g;
            $OUT .= "push \"route $greenNetwork\"\n";
        }
   }

}
